# These substitutions allow the end user to override certain values
substitutions:
  name: "lum-iot-test2"
  friendly_name: "Project Template"

esp32:
  board: esp32dev
  framework:
    type: esp-idf
    # version: 5.2.1
    # platform_version: 6.6.0

esphome:
  name: "${name}"
  # Friendly names are used where appropriate in Home Assistant
  friendly_name: "${friendly_name}"
  # Automatically add the mac address to the name
  # so you can use a single firmware for all devices
  name_add_mac_suffix: false

  # This will allow for (future) project identification,
  # configuration and updates.
  project:
    name: LumenSoft.espnow-test
    version: "1.0"

# To be able to get logs from the device via serial and api.
logger:
  level: verbose

globals:
  - id: hub_address
    type: uint64_t
    initial_value: "0xE86BEA23CD98"
    restore_value: yes

espnow:
  auto_add_peer: true
  predefined_peers:
    - peer_id: keeper
      mac_address: E8:6B:EA:23:CD:98

  on_receive:
    - logger.log:
        format: "Received: '%s' from '%s' command: %d RSSI: %d"
        args:
          [
            packet.get_payload(),
            packet.get_peer_code().c_str(),
            packet.get_command(),
            packet.rssi,
          ]

  on_broadcast:
    - command: 123
      then:
        - logger.log:
            format: "Broadcast Received from: '%s' RSSI: %d: %s"
            args:
              [
                packet.get_peer_code().c_str(),
                packet.rssi,
                packet.get_payload(),
              ]

interval:
  - interval: 30sec
    startup_delay: 20sec
    then:
      - espnow.broadcast:
          payload: "Broadcast message"
          command: 123
  - interval: 5sec
    then:
      - espnow.send:
          mac_address: keeper
          payload: "Used static keeper value"
          command: 222
      - espnow.send:
          mac_address: E8:6B:EA:23:CD:98
          payload: "used fixed mac address"
          command: 123
      - espnow.send:
          # dynamic peer address
          mac_address: !lambda return keeper;
          payload: "use keeper dynamicly "
          command: 62
      - espnow.send:
          mac_address: !lambda return id(hub_address);
          payload: "Using a global numberic value dynamicly"
          command: 132

binary_sensor:
  - platform: gpio
    pin: GPIO39
    name: Button
    on_click:
      - espnow.static.peer:
          peer_id: keeper
          mac_address: 80:6B:EA:23:CD:87
      - espnow.peer.add: 80:6B:EA:23:AA:BB
      - espnow.peer.del: 80:6B:EA:23:AA:BB
